import dolfinx
import numpy as np
import ufl

from tIGArx.BSplines import ExplicitBSplineControlMesh, uniform_knots
from tIGArx.LocalSpline import LocallyConstructedSpline
from tIGArx.calculusUtils import getQuadRuleInterval
from tIGArx.timeIntegration import LoadStepper
from tIGArx.utils import interleave_and_expand


def test_kl_hyper():
    # Specify the number of elements in each direction.
    NELu = 8
    NELv = 8

    # Probably not a good idea to go past 2 because of compile time...
    p = 2
    q = 2

    control_mesh = ExplicitBSplineControlMesh(
        [p, q],
        [
            uniform_knots(p, -1.0, 1.0, NELu),
            uniform_knots(q, -1.0, 1.0, NELv)
        ],
        extraDim=1
    )

    spline = LocallyConstructedSpline.get_from_mesh_and_init(
        control_mesh, quad_degree=4, dofs_per_cp=3
    )

    scalar_spline = control_mesh.getScalarSpline()
    side_dofs = []
    for side in range(0, 2):
        for direction in range(0, 2):
            side_dofs.append(scalar_spline.getSideDofs(
                direction,
                side,
                layers=2,
            ))  # clamped BC
            # layers=1) # pinned BC

    side_dofs = np.array(np.unique(np.concatenate(side_dofs)), dtype=np.int32)
    side_dofs = np.array(interleave_and_expand(side_dofs, 3), dtype=np.int32)
    dofs_values = np.zeros(len(side_dofs), dtype=np.float64)

    bcs = {"dirichlet": (side_dofs, dofs_values)}

    # Unknown midsurface displacement
    y_hom = dolfinx.fem.Function(spline.V)  # in homogeneous representation
    y_hom.name = "disp"
    y = spline.rationalize(y_hom)  # in physical coordinates

    # Reference configuration:
    X = spline.F
    x = X + y

    # Normalize a vector v.
    def unit(v):
        return v / ufl.sqrt(ufl.inner(v, v))

    # Geometrical quantities for the shell midsurface in a configuration x.
    def midsurfaceGeometry(x):

        # Covariant basis vectors
        dxdxi = spline.parametricGrad(x)
        a0 = ufl.as_vector([dxdxi[0, 0], dxdxi[1, 0], dxdxi[2, 0]])
        a1 = ufl.as_vector([dxdxi[0, 1], dxdxi[1, 1], dxdxi[2, 1]])
        a2 = unit(ufl.cross(a0, a1))

        # Midsurface metric tensor
        a = ufl.as_matrix(
            ((ufl.inner(a0, a0), ufl.inner(a0, a1)),
             (ufl.inner(a1, a0), ufl.inner(a1, a1)))
        )
        # Curvature
        deriv_a2 = spline.parametricGrad(a2)
        b = -ufl.as_matrix(
            (
                (ufl.inner(a0, deriv_a2[:, 0]), ufl.inner(a0, deriv_a2[:, 1])),
                (ufl.inner(a1, deriv_a2[:, 0]), ufl.inner(a1, deriv_a2[:, 1])),
            )
        )

        return (a0, a1, a2, deriv_a2, a, b)

    # Obtain shell geometry for reference and current configuration midsurfaces
    A0, A1, A2, deriv_A2, A, B = midsurfaceGeometry(X)
    a0, a1, a2, deriv_a2, a, b = midsurfaceGeometry(x)

    # Generate a curvilinear basis from midsurface data at the through-thickness
    # coordinate xi2, based geometrical data from the midsurface.
    def curvilinearBasis(a0, a1, deriv_a2, xi2):
        g0 = a0 + xi2 * deriv_a2[:, 0]
        g1 = a1 + xi2 * deriv_a2[:, 1]
        return g0, g1

    def metric(a, b, xi2):
        return a - 2.0 * xi2 * b

    def localCartesianBasis(a0, a1):

        # Perform Gram--Schmidt orthonormalization to get e0 and e1.
        e0 = unit(a0)
        e1 = unit(a1 - e0 * ufl.inner(a1, e0))

        return e0, e1

    def tensorToCartesian(T, a, a0, a1):

        # raise indices on curvilinear basis
        ac = ufl.inv(a)
        a0c = ac[0, 0] * a0 + ac[0, 1] * a1
        a1c = ac[1, 0] * a0 + ac[1, 1] * a1

        e0, e1 = localCartesianBasis(a0, a1)

        ea = ufl.as_matrix(
            (
                (ufl.inner(e0, a0c), ufl.inner(e0, a1c)),
                (ufl.inner(e1, a0c), ufl.inner(e1, a1c)),
            )
        )
        ae = ea.T

        return ea * T * ae

    def psi_el(E):
        # Neo-Hookean potential, as an example:
        mu = dolfinx.fem.Constant(spline.mesh, 1e4)
        C = 2.0 * E + ufl.Identity(3)
        I1 = ufl.tr(C)
        return 0.5 * mu * (I1 - 3.0)

    def p(E):
        E = ufl.variable(E)
        dpsi_el_dC = 0.5 * ufl.diff(psi_el(E), E)
        C22 = 2.0 * E[2, 2] + 1.0
        return 2.0 * dpsi_el_dC[2, 2] * C22

    def psi(xi2):
        G = metric(A, B, xi2)
        g = metric(a, b, xi2)
        E_flat = 0.5 * (g - G)
        G0, G1 = curvilinearBasis(A0, A1, deriv_A2, xi2)
        E_2D = tensorToCartesian(E_flat, G, G0, G1)
        C_2D = 2.0 * E_2D + ufl.Identity(2)
        C22 = 1.0 / ufl.det(C_2D)
        E22 = 0.5 * (C22 - 1.0)
        E = ufl.as_tensor(
            [[E_2D[0, 0], E_2D[0, 1], 0.0], [E_2D[1, 0], E_2D[1, 1], 0.0],
             [0.0, 0.0, E22]]
        )
        C = 2.0 * E + ufl.Identity(3)
        J = ufl.sqrt(ufl.det(C))

        return psi_el(E) - p(E) * (J - 1.0)

    # Shell thickness:
    h_th = dolfinx.fem.Constant(spline.mesh, 0.03)

    # Obtain a quadrature rule for numerical through-thickness integration:
    N_QUAD_PTS = 4
    xi2, w = getQuadRuleInterval(N_QUAD_PTS, h_th)

    # Define the numerically-integrated energy:
    energySurfaceDensity = 0.0
    for i in range(0, N_QUAD_PTS):
        energySurfaceDensity += psi(xi2[i]) * w[i]

    # The total elastic potential energy:
    Wint = energySurfaceDensity * spline.dx

    # Take the Gateaux derivative of Wint in test function direction z_hom.
    z_hom = ufl.TestFunction(spline.V)
    z = spline.rationalize(z_hom)
    dWint = ufl.derivative(Wint, y_hom, z_hom)

    # External follower load magnitude:
    PRESSURE = 1.0e2

    # Divide loading into steps to improve nonlinear convergence.
    N_STEPS = 1
    DELTA_T = 0.01
    stepper = LoadStepper(spline.mesh, DELTA_T)

    # Parameterize loading by a pseudo-time associated with the load stepper.
    dWext = (
            -(PRESSURE * stepper.t)
            * ufl.sqrt(ufl.det(a) / ufl.det(A))
            * ufl.inner(a2, z)
            * spline.dx
    )

    # Full nonlinear residual:
    res = dWint + dWext

    # Consistent tangent:
    dRes = ufl.derivative(res, y_hom)

    # Execute nonlinear solve.
    spline.solve_nonlinear_variational_problem(dRes, res, y_hom, bcs, profile=False)

    # Best way that I can think of...
    ref = np.array(
        [1.423101487335701e-66, 1.423101487335688e-66, 1.440653904155801e-64,
         7.21598181842716e-36, 7.215981818427092e-36, 7.304983145296979e-34,
         7.21598181842716e-36, 7.215981818427092e-36, 7.304983145296979e-34,
         3.658937473346075e-05, 3.658937473346041e-05, 0.003704066507517128,
         0, 0, 0, 0, 0, 0, 9.147343683365169e-06, 9.147343683365083e-06,
         0.0009260166268792808, 9.147343683365169e-06, 9.147343683365083e-06,
         0.0009260166268792808, 2.286835920841292e-06, 2.286835920841271e-06,
         0.0002315041567198202, -7.288867513362498e-36, 1.074589542088088e-35,
         1.915780349628683e-33, -3.695894911319226e-05, 5.448816312107757e-05,
         0.009714160440448998, 0, 0, 0,
         -9.23973727829805e-06, 1.362204078026942e-05, 0.002428540110112247,
         3.649698113852771e-05, 5.935875919709475e-05, 0.007058623244508653,
         9.124245284631928e-06, 1.483968979927369e-05, 0.001764655811127163,
         1.074589542088126e-35, -7.288867513363002e-36, 1.91578034962868e-33,
         5.448816312107963e-05, -3.695894911319469e-05, 0.009714160440448982,
         0, 0, 0, 5.935875919709561e-05,
         3.649698113852673e-05, 0.007058623244508647, 1.362204078026991e-05,
         -9.239737278298658e-06, 0.002428540110112244, 1.48396897992739e-05,
         9.124245284631683e-06, 0.001764655811127162, -3.349888794064306e-35,
         5.891069569942938e-36, 2.556259689403796e-33, -0.0001698595416197376,
         2.987127150529774e-05, 0.0129617765184478, 0, 0, 0,
         -4.246488540493437e-05, 7.467817876324434e-06, 0.003240444129611949,
         -0.0001252529465298853, 3.898864704421129e-05, 0.01167907817265606,
         -3.131323663247132e-05, 9.747161761052822e-06, 0.002919769543164015,
         -0.0001230636853225736, -0.0001230636853225782, 0.02598683609514034,
         -7.696460772213362e-05, 3.734428257070265e-05, 0.01863940957434632,
         3.734428257070634e-05, -7.696460772213782e-05, 0.01863940957434631,
         5.495729706583614e-05, 5.495729706583431e-05, 0.01348313144922239,
         5.891069569943065e-36, -3.349888794064366e-35, 2.556259689403793e-33,
         2.987127150529837e-05, -0.0001698595416197406, 0.01296177651844779,
         0, 0, 0, 3.898864704421339e-05,
         -0.0001252529465298887, 0.01167907817265604, 7.467817876324583e-06,
         -4.246488540493512e-05, 0.003240444129611945, 9.747161761053347e-06,
         -3.131323663247218e-05, 0.00291976954316401, -3.798807721770714e-35,
         1.480087325592418e-49, 2.74195530860962e-33, -0.0001926224355461713,
         7.504934346709695e-19, 0.01390336517103187, 0, 0, 0,
         -4.815560888654278e-05, 1.876233586677424e-19, 0.003475841292757965,
         -0.0001869317120645619, 1.944030099400499e-05, 0.01366796800788585,
         -4.673292801614047e-05, 4.860075248501248e-06, 0.003416992001971462,
         -0.000433074309709746, -0.0001121199272589142, 0.03537042268604325,
         -0.0003205930044521084, 9.309107566893735e-06, 0.02504482631957057,
         -0.0003165863472017332, -0.0001449006393547563, 0.03161199034998725,
         -0.00023571276996279, 1.251064896657485e-05, 0.02250184530331688,
         -0.0001121199272589137, -0.000433074309709749, 0.03537042268604328,
         -0.0001449006393547535, -0.0003165863472017374, 0.03161199034998722,
         9.309107566894724e-06, -0.0003205930044521129, 0.02504482631957055,
         1.251064896657838e-05, -0.0002357127699627953, 0.02250184530331687,
         -9.347753927455726e-50, -3.798807721770709e-35, 2.741955308609618e-33,
         -4.739874350770016e-19, -0.0001926224355461711, 0.01390336517103186,
         0, 0, 0, 1.94403009940039e-05, -0.0001869317120645635,
         0.01366796800788585, -1.184968587692504e-19, -4.815560888654272e-05,
         0.003475841292757963, 4.860075248500975e-06, -4.673292801614087e-05,
         0.003416992001971462, -3.349888794064327e-35, -5.891069569943225e-36,
         2.556259689403796e-33, -0.0001698595416197387, -2.987127150529918e-05,
         0.01296177651844781, 0, 0, 0,
         -4.246488540493464e-05, -7.467817876324786e-06, 0.00324044412961195,
         -0.0001869317120645639, -1.944030099400419e-05, 0.01366796800788585,
         -4.673292801614097e-05, -4.860075248501048e-06, 0.003416992001971461,
         -0.0005110449225321871, 5.717182012374049e-19, 0.03819549406270383,
         -0.0003685392750657607, 1.09356407704648e-18, 0.02692807997946579,
         -0.000491552269326576, -5.404517286425904e-05, 0.03748922621853868,
         -0.0003565527074123463, 1.078908302644157e-05, 0.02645726656449197,
         -0.0003618481861759968, -0.0003618481861759958, 0.04913274895604017,
         -0.0004619453920614445, -0.0002604832271229394, 0.0435344390781163,
         -0.0002604832271229398, -0.0004619453920614445, 0.04353443907811634,
         -0.0003356007942530164, -0.0003356007942530175, 0.03871951953435707,
         -2.52186124483232e-18, -0.0005110449225321869, 0.03819549406270385,
         -5.404517286426103e-05, -0.0004915522693265772, 0.03748922621853872,
         -1.218079162376445e-18, -0.0003685392750657603, 0.02692807997946577,
         1.07890830264396e-05, -0.0003565527074123487, 0.02645726656449197,
         -5.891069569943547e-36, -3.349888794064327e-35, 2.556259689403793e-33,
         -2.987127150530071e-05, -0.0001698595416197387, 0.01296177651844779,
         0, 0, 0, -1.944030099400516e-05, -0.0001869317120645626,
         0.01366796800788583, -7.467817876325161e-06, -4.246488540493464e-05,
         0.003240444129611945, -4.86007524850129e-06, -4.673292801614066e-05,
         0.003416992001971457, -7.288867513362367e-36, -1.074589542088147e-35,
         1.91578034962868e-33, -3.695894911319135e-05, -5.448816312108061e-05,
         0.009714160440448982, 0, 0, 0, -9.239737278297847e-06,
         -1.362204078027018e-05, 0.002428540110112244, -0.0001252529465298846,
         -3.898864704421424e-05, 0.01167907817265606, -3.131323663247116e-05,
         -9.747161761053561e-06, 0.002919769543164014, -0.0004330743097097528,
         0.0001121199272589137, 0.03537042268604326, -0.0003205930044521115,
         -9.309107566895485e-06, 0.02504482631957056, -0.0004915522693265798,
         5.404517286425969e-05, 0.03748922621853867, -0.0003565527074123496,
         -1.078908302644031e-05, 0.02645726656449198, -0.0004397139748235731,
         1.196121021220682e-18, 0.0534482055768894, -0.0005561122113249555,
         3.53006462455375e-19, 0.04720305380157024, -0.0004202475276616774,
         -0.0001890954646299865, 0.05236934142167709, -0.0005325705065090775,
         -0.0001342706332318252, 0.04628590012070678, -4.544813510715602e-18,
         -0.0004397139748235695, 0.05344820557688944, -0.0001890954646299889,
         -0.0004202475276616759, 0.05236934142167714, -3.800803855343535e-18,
         -0.0005561122113249554, 0.04720305380157034, -0.0001342706332318274,
         -0.0005325705065090768, 0.04628590012070679, 0.0001121199272589096,
         -0.0004330743097097483, 0.03537042268604326, 5.404517286425616e-05,
         -0.000491552269326578, 0.03748922621853866, -9.309107566898465e-06,
         -0.0003205930044521102, 0.02504482631957054, -1.078908302644241e-05,
         -0.0003565527074123477, 0.02645726656449198, -1.074589542088158e-35,
         -7.288867513362599e-36, 1.915780349628683e-33, -5.448816312108137e-05,
         -3.695894911319252e-05, 0.009714160440448998, 0, 0, 0,
         -3.898864704421623e-05, -0.000125252946529886, 0.01167907817265606,
         -1.362204078027032e-05, -9.23973727829814e-06, 0.002428540110112248,
         -9.747161761054059e-06, -3.13132366324715e-05, 0.002919769543164016,
         7.215981818427179e-36, -7.215981818427261e-36, 7.304983145296952e-34,
         3.658937473346085e-05, -3.658937473346127e-05, 0.003704066507517116,
         0, 0, 0, 9.147343683365203e-06, -9.147343683365308e-06,
         0.0009260166268792781, 3.649698113852822e-05, -5.935875919709666e-05,
         0.007058623244508634, 9.124245284632055e-06, -1.483968979927416e-05,
         0.001764655811127158, -0.0001230636853225774, 0.0001230636853225757,
         0.02598683609514032, -7.696460772213334e-05, -3.734428257070695e-05,
         0.01863940957434629, -0.0003165863472017408, 0.0001449006393547547,
         0.03161199034998724, -0.0002357127699627909, -1.251064896657922e-05,
         0.02250184530331688, -0.0003618481861760018, 0.0003618481861759979,
         0.04913274895604017, -0.0004619453920614529, 0.0002604832271229407,
         0.04353443907811635, -0.0004202475276616808, 0.0001890954646299886,
         0.05236934142167705, -0.0005325705065090808, 0.0001342706332318261,
         0.04628590012070678, -2.029572955286569e-18, 7.26994403153423e-19,
         0.05831215337043484, -0.0002312199815434502, 1.792417307449638e-18,
         0.05709616642204848, -4.137996868537425e-18, -0.0002312199815434454,
         0.0570961664220485, -0.0002206888523150839, -0.0002206888523150802,
         0.05591446017195562, 0.0003618481861759924, -0.0003618481861759987,
         0.04913274895604014, 0.0001890954646299811, -0.0004202475276616773,
         0.05236934142167707, 0.0002604832271229357, -0.0004619453920614463,
         0.04353443907811629, 0.0001342706332318205, -0.0005325705065090786,
         0.04628590012070679, 0.0001230636853225725, -0.0001230636853225743,
         0.02598683609514032, 0.0001449006393547506, -0.0003165863472017353,
         0.03161199034998721, -3.734428257070871e-05, -7.696460772213414e-05,
         0.01863940957434632, -1.251064896658269e-05, -0.0002357127699627913,
         0.02250184530331687, -7.21598181842712e-36, 7.215981818427165e-36,
         7.304983145296969e-34, -3.658937473346056e-05, 3.658937473346079e-05,
         0.003704066507517124, 0, 0, 0, -5.935875919709595e-05,
         3.649698113852788e-05, 0.007058623244508649, -9.147343683365129e-06,
         9.147343683365186e-06, 0.0009260166268792801, -1.483968979927399e-05,
         9.124245284631971e-06, 0.001764655811127162, 0, 0, 0, 0, 0, 0, 0, 0,
         0, 0, 0, 0, 9.147343683365203e-06, -9.147343683365308e-06,
         0.0009260166268792781, 2.286835920841301e-06, -2.286835920841327e-06,
         0.0002315041567198195, 5.448816312108098e-05, 3.695894911319332e-05,
         0.009714160440448972, 5.935875919709629e-05, -3.649698113852823e-05,
         0.00705862324450863, 3.734428257070674e-05, 7.696460772213546e-05,
         0.01863940957434628, 5.4957297065837e-05, -5.495729706583732e-05,
         0.01348313144922237, -0.0001121199272589152, 0.0004330743097097488,
         0.03537042268604327, -0.0001449006393547592, 0.0003165863472017376,
         0.03161199034998722, -0.0002604832271229441, 0.0004619453920614453,
         0.04353443907811632, -0.0003356007942530276, 0.0003356007942530188,
         0.03871951953435707, 2.72388430739064e-18, 0.0004397139748235717,
         0.05344820557688942, -0.000189095464629988, 0.0004202475276616773,
         0.05236934142167708, 6.367027922289357e-19, 0.0002312199815434471,
         0.05709616642204849, -0.0002206888523150853, 0.0002206888523150834,
         0.0559144601719556, 0.0004397139748235703, -3.113558360003454e-18,
         0.05344820557688939, 0.0002312199815434465, -1.261654303367232e-18,
         0.0570961664220485, 0.0004202475276616725, -0.0001890954646299895,
         0.05236934142167706, 0.0002206888523150764, -0.0002206888523150817,
         0.05591446017195561, 0.0004330743097097459, -0.0001121199272589168,
         0.03537042268604326, 0.0004619453920614433, -0.000260483227122943,
         0.04353443907811628, 0.0003165863472017332, -0.0001449006393547545,
         0.03161199034998721, 0.0003356007942530154, -0.000335600794253019,
         0.03871951953435707, 3.695894911319236e-05, 5.448816312108052e-05,
         0.009714160440448982, 7.696460772213346e-05, 3.73442825707069e-05,
         0.01863940957434631, -3.649698113852755e-05, 5.935875919709606e-05,
         0.007058623244508648, -5.495729706583657e-05, 5.495729706583657e-05,
         0.01348313144922238, -2.276962379737112e-65, 2.276962379737127e-65,
         2.30504624664928e-63, -2.886392727370845e-35, 2.886392727370863e-35,
         2.921993258118785e-33, 0, 0, 0, -9.147343683365129e-06,
         9.147343683365186e-06, 0.0009260166268792801, 0, 0, 0,
         -2.286835920841282e-06, 2.286835920841297e-06, 0.00023150415671982,
         0, 0, 0, 0, 0, 0, 1.362204078027024e-05, 9.239737278298309e-06,
         0.002428540110112243, 1.483968979927407e-05, -9.124245284632059e-06,
         0.001764655811127158, 2.987127150529953e-05, 0.0001698595416197399,
         0.01296177651844779, 3.898864704421537e-05, 0.0001252529465298877,
         0.01167907817265605, 9.309107566895668e-06, 0.0003205930044521121,
         0.02504482631957055, 1.25106489665793e-05, 0.0002357127699627939,
         0.02250184530331687, 1.420526313225264e-20, 0.0005110449225321876,
         0.03819549406270387, -5.404517286425792e-05, 0.0004915522693265775,
         0.03748922621853869, 2.994591213109153e-18, 0.0005561122113249571,
         0.0472030538015703, -0.0001342706332318231, 0.0005325705065090773,
         0.0462859001207068, 0.0003618481861759992, 0.0003618481861759979,
         0.04913274895604017, 0.0001890954646299913, 0.0004202475276616791,
         0.05236934142167708, 0.0004202475276616802, 0.0001890954646299847,
         0.05236934142167711, 0.0002206888523150863, 0.0002206888523150804,
         0.0559144601719556, 0.0005110449225321852, -5.308132749138073e-18,
         0.03819549406270385, 0.0005561122113249537, -4.450239366343001e-18,
         0.04720305380157026, 0.0004915522693265755, -5.404517286426569e-05,
         0.03748922621853871, 0.0005325705065090757, -0.0001342706332318301,
         0.04628590012070678, 0.0001698595416197374, 2.987127150529701e-05,
         0.01296177651844779, 0.0003205930044521082, 9.309107566892088e-06,
         0.02504482631957056, 0.0001252529465298852, 3.898864704421403e-05,
         0.01167907817265605, 0.0002357127699627897, 1.251064896657913e-05,
         0.02250184530331688, 2.915547005345005e-35, 4.298358168352571e-35,
         7.663121398514724e-33, 9.239737278298072e-06, 1.362204078027013e-05,
         0.002428540110112246, 0, 0, 0, -9.124245284631888e-06,
         1.483968979927401e-05, 0.001764655811127162, 0, 0, 0,
         0, 0, 0, 7.467817876324909e-06, 4.246488540493496e-05,
         0.003240444129611948, 9.747161761053843e-06, 3.131323663247193e-05,
         0.002919769543164013, -2.238925821964673e-18, 0.0001926224355461703,
         0.01390336517103186, 1.944030099400368e-05, 0.000186931712064563,
         0.01366796800788585, -2.809665994814937e-18, 0.0003685392750657598,
         0.02692807997946578, 1.078908302644019e-05, 0.0003565527074123481,
         0.02645726656449199, 0.0001121199272589141, 0.0004330743097097529,
         0.03537042268604328, 5.404517286425777e-05, 0.0004915522693265805,
         0.03748922621853868, 0.0002604832271229397, 0.00046194539206145,
         0.04353443907811633, 0.0001342706332318264, 0.0005325705065090828,
         0.04628590012070681, 0.0004330743097097479, 0.0001121199272589127,
         0.03537042268604332, 0.0004619453920614453, 0.0002604832271229392,
         0.04353443907811635, 0.0004915522693265768, 5.40451728642567e-05,
         0.03748922621853871, 0.0005325705065090783, 0.0001342706332318225,
         0.04628590012070681, 0.0001926224355461698, -2.895192463496828e-18,
         0.01390336517103188, 0.0003685392750657585, -4.94940197227722e-18,
         0.02692807997946582, 0.0001869317120645614, 1.944030099400077e-05,
         0.01366796800788585, 0.0003565527074123456, 1.078908302643449e-05,
         0.02645726656449199, 1.339955517625722e-34, 2.35642782797712e-35,
         1.022503875761518e-32, 4.246488540493435e-05, 7.467817876324235e-06,
         0.003240444129611948, 0, 0, 0, 3.13132366324713e-05,
         9.747161761053506e-06, 0.002919769543164013, 0, 0, 0, 0, 0, 0,
         -5.597314554911683e-19, 4.815560888654257e-05, 0.003475841292757966,
         4.86007524850092e-06, 4.673292801614074e-05, 0.003416992001971463,
         -2.987127150529735e-05, 0.0001698595416197409, 0.01296177651844779,
         -1.944030099400653e-05, 0.0001869317120645626, 0.01366796800788584,
         -9.309107566893313e-06, 0.0003205930044521144, 0.02504482631957056,
         -1.078908302644374e-05, 0.0003565527074123485, 0.02645726656449199,
         0.0001230636853225801, 0.0001230636853225771, 0.02598683609514038,
         0.0001449006393547585, 0.0003165863472017401, 0.03161199034998727,
         0.000316586347201737, 0.0001449006393547554, 0.03161199034998728,
         0.0003356007942530182, 0.0003356007942530199, 0.03871951953435711,
         0.0001698595416197394, -2.987127150529883e-05, 0.01296177651844781,
         0.0003205930044521112, -9.309107566895371e-06, 0.02504482631957059,
         0.0001869317120645625, -1.944030099400558e-05, 0.01366796800788588,
         0.0003565527074123471, -1.078908302644273e-05, 0.02645726656449202,
         1.519523088708275e-34, -2.283904147543159e-48, 1.09678212344385e-32,
         4.815560888654244e-05, -7.23798115874207e-19, 0.003475841292757971,
         0, 0, 0,
         4.673292801614034e-05, 4.860075248500192e-06, 0.003416992001971462,
         0, 0, 0,
         0, 0, 0,
         -7.46781787632435e-06, 4.246488540493523e-05, 0.003240444129611947,
         -4.860075248501633e-06, 4.673292801614066e-05, 0.00341699200197146,
         -5.448816312107492e-05, 3.695894911319438e-05, 0.009714160440449001,
         -3.898864704420881e-05, 0.0001252529465298898, 0.01167907817265606,
         -3.73442825706985e-05, 7.696460772213723e-05, 0.01863940957434635,
         -1.251064896657132e-05, 0.0002357127699627974, 0.0225018453033169,
         3.695894911319533e-05, -5.44881631210804e-05, 0.009714160440449003,
         7.696460772213889e-05, -3.734428257070622e-05, 0.01863940957434634,
         0.0001252529465298879, -3.898864704421352e-05, 0.01167907817265606,
         0.0002357127699627943, -1.251064896657814e-05, 0.02250184530331691,
         1.339955517625738e-34, -2.356427827977265e-35, 1.02250387576152e-32,
         4.246488540493485e-05, -7.467817876324707e-06, 0.003240444129611953,
         0, 0, 0,
         4.673292801614062e-05, -4.860075248501395e-06, 0.00341699200197147,
         0, 0, 0,
         0, 0, 0,
         -1.362204078026873e-05, 9.239737278298596e-06, 0.00242854011011225,
         -9.747161761052202e-06, 3.131323663247245e-05, 0.002919769543164016,
         -3.658937473345903e-05, -3.658937473346168e-05, 0.003704066507517137,
         -5.93587591970925e-05, -3.649698113852851e-05, 0.007058623244508673,
         -3.649698113852504e-05, -5.935875919709718e-05, 0.007058623244508672,
         -5.495729706583102e-05, -5.495729706583723e-05, 0.01348313144922242,
         2.915547005345245e-35, -4.298358168352554e-35, 7.663121398514741e-33,
         9.239737278298833e-06, -1.36220407802701e-05, 0.002428540110112251,
         0, 0, 0,
         3.131323663247198e-05, -9.747161761053381e-06, 0.002919769543164016,
         0, 0, 0,
         0, 0, 0,
         -9.147343683364758e-06, -9.14734368336542e-06, 0.0009260166268792842,
         -1.483968979927313e-05, -9.124245284632128e-06, 0.001764655811127168,
         -2.886392727370731e-35, -2.88639272737094e-35, 2.9219932581188e-33,
         -9.147343683364758e-06, -9.14734368336542e-06, 0.0009260166268792842,
         0, 0, 0,
         -9.124245284631259e-06, -1.48396897992743e-05, 0.001764655811127168,
         -1.423101487335637e-66, -1.42310148733574e-66, 1.440653904155806e-64,
         0, 0, 0,
         0, 0, 0,
         -2.286835920841189e-06, -2.286835920841355e-06, 0.000231504156719821
    ])

    np.allclose(y_hom.x.array, ref, atol=1e-10)
